package com.crimsonlogic.doctorappointmentschedulingsystem.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Entity class of Doctor
 * class mapped to doctor_info in database
 */
@Entity
@Table(name="doctor_info")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Doctor {
	
	/**
	 * DoctorID autogenerated 
	 * field is mapped to doctor_id column
	 */
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY, generator = "doctor-id-generator")
    @GenericGenerator(name = "doctor-id-generator", strategy = "com.crimsonlogic.doctorappointmentschedulingsystem.util.DoctorIdGenerator")
	@Column(name="doctor_id")
	private String doctorID;
	
	/**
	 * Name of the doctor
	 * field is mapped to doctor_name column
	 */
	
	@Column(name="doctor_name")
	private String doctorName;
	
	/**
	 * Email Id of the doctor
	 * field is mapped to doctor_email column
	 */
	
	@Column(name="doctor_email", unique = true)
	private String doctorEmail;
	
	/**
	 * Password of the doctror
	 * field is mapped to doctor_password column 
	 */
	
	@Column(name="doctor_password")
	private String doctorPassword;
	
	/**
	 * NumcUID is Doctor Identification Number 
	 * field is mapped to doctor_nmcuid column
	 */
	
	@Column(name="doctor_nmcuid", unique = true)
	private String doctorNmcUID; 
	
	/**
	 * Phone number of the doctor 
	 * filed is mapped to doctor_phonenumber column
	 */
	
	@Column(name="doctor_phonenumber",unique =true)
	private String doctorPhonenumber;
	
	/**
	 * Doctor Speciality 
	 * field is mapped to doctor_speciality column
	 */
	
	@Column(name="doctor_speciality")
	private String doctorSpeciality;
	
	/**
	 * Experience of the doctor
	 * field is mapped to doctor_experience
	 */
	
	@Column(name="doctor_experience")
	private int doctorExperience;	
	
	/**
	 * Doctor status
	 * field is mapped to doctor_status column
	 */
	
	@Column(name="doctor_status")
	private String doctorStatus;	
	
	/**
	 *Doctor description 
	 *field is mapped to doctor_description column
	 */
	
	@Column(name="doctor_description")
	private String doctorDescription;
	
	/**
	 * Doctor image 
	 * field is mapped to doctor_image column
	 */
	
	@Column(name="doctor_image")
	private String doctorImage;
}
