package com.crimsonlogic.doctorappointmentschedulingsystem.entity;

import java.sql.Timestamp;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.PrePersist;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

import lombok.Data;

/**
 * Transaction Entity class
 * class is mapped to transaction_info table in database
 * 
 */
@Entity
@Table(name="transaction_info")
@Data
public class Transaction {
	/**
	 * Transaction ID autogenerated 
	 * field is mapped to transaction_id column
	 * 
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY, generator = "transaction-id-generator")
    @GenericGenerator(name = "transaction-id-generator", strategy = "com.crimsonlogic.doctorappointmentschedulingsystem.util.TransactionIdGenerator")
	@Column(name="transaction_id")
	private String transactionID;
	
	/**
	 * transaction time represent timestamp
	 * field is mapped to transaction_time column
	 */
	
	@Column(name="transaction_time")
	private Timestamp  transactionTime;
	
	/**
	 * transaction cost  represent the appointment cost
	 * field is mapped to transaction_cost column
	 */
	
	@Column(name="transaction_cost")
	private int transactionCost;
	
	/**
	 *  transaction status 
	 */
	@Column(name="transaction_status")
	private String transactionStatus;
	
	/**
	 * Relationship between the Appointment and Transaction Entity
	 * field is mapped to appointment_id in column
	 */
	@OneToOne
	@JoinColumn(name = "appointment_id",referencedColumnName= "appointment_id")
	private Appointment appointmentID;
	
	/**
	 * Assigning current time in the time of transaction process
	 */
	 @PrePersist
	    protected void onCreate() {
	        // Set transactionTime to the current timestamp
	        this.transactionTime = new Timestamp(System.currentTimeMillis());
	    }

}	
