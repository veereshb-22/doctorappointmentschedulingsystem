package com.crimsonlogic.doctorappointmentschedulingsystem.entity;

import java.sql.Date;
import java.sql.Time;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

/**
 * Entity class of DateSlot 
 * class is mapped to date_slot in the database
 */
@Entity
@Table(name = "date_slot")
public class DateSlot {
		/**
		 *SlotId of DateSlot autogenerated 
		 * field is mapped to slot_id primary key
		 */
	 	@Id
	 	@Column(name = "slot_id")
	 	@GeneratedValue(strategy = GenerationType.IDENTITY, generator = "patient-id-generator")
	    @GenericGenerator(name = "patient-id-generator", strategy = "com.crimsonlogic.doctorappointmentschedulingsystem.util.PatientIdGenerator")
	   
	    private String slotId;
	 	
	 	/**
	 	 * SlotStartTime is slot date for starting date of  slot for doctor
	 	 * field mapped to slot_start_time column
	 	 */
	 	
	    @Column(name = "slot_start_time")
	    private Date slotStartTime;  

	    /**
	     * SlotEndTime is slot date for ending date of slot for doctor
	     * field mapped to slot_end_time column
	   	 */
	    
	    @Column(name = "slot_end_time")
	    private Date slotEndTime;  
	    
	    /**
	     * Slot Status 
	     * field mapped to slot_status column  
	     */
	    
	    @Column(name = "slot_status")
	    private String slotStatus;
	    
	    /**
	     * Relationship between the Doctor and DateSlot entity class
	     * field mapped to doctor_id column
	     */
	    @ManyToOne
	    @JoinColumn(name = "doctor_id", referencedColumnName = "doctor_id")
	    private Doctor doctor;
	    
	    /** 
	     * Non Argument Constructor
	     */
	    
	    public DateSlot() {
	    	
	    }
	    
	   /**
	    *  Argument  Constructor 
	    */
	    public DateSlot(Date slotStartTime, Date slotEndTime, String slotStatus, Doctor doctor) {
	        this.slotStartTime = slotStartTime;
	        this.slotEndTime = slotEndTime;
	        this.slotStatus = slotStatus;
	        this.doctor = doctor;
	    }
	    /**
	     *  All Argument Constructor
	     */
	    
	    public DateSlot(String slotId, Date slotStartTime, Date slotEndTime, String slotStatus, Doctor doctor) {
	        this.slotId = slotId;
	        this.slotStartTime = slotStartTime;
	        this.slotEndTime = slotEndTime;
	        this.slotStatus = slotStatus;
	        this.doctor = doctor;
	    }

	    // Getters and Setters
	    public String getSlotId() {
	        return slotId;
	    }

	    public void setSlotId(String slotId) {
	        this.slotId = slotId;
	    }

	    public Date getSlotStartTime() {
	        return slotStartTime;  
	    }

	    public void setSlotStartTime(Date slotStartTime) {
	        this.slotStartTime = slotStartTime; 
	    }

	    public Date getSlotEndTime() {
	        return slotEndTime;  
	    }

	    public void setSlotEndTime(Date slotEndTime) {
	        this.slotEndTime = slotEndTime; 
	    }

	    public String getSlotStatus() {
	        return slotStatus;
	    }

	    public void setSlotStatus(String slotStatus) {
	        this.slotStatus = slotStatus;
	    }

	    public Doctor getDoctor() {
	        return doctor;
	    }

	    public void setDoctor(Doctor doctor) {
	        this.doctor = doctor;
	    }
}
